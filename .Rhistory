geom_boxplot(width = 0.1) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related right NAcc activity") +
ylim(-0.1, 0.1) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
ggarrange(fig_left_nacc, fig_right_nacc,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
fig_left_nacc <- ggplot(nacc_left, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related left NAcc activity") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_right_nacc <- ggplot(nacc_right, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related right NAcc activity") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
ggarrange(fig_left_nacc, fig_right_nacc,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
ggarrange(fig_left_nacc, fig_right_nacc,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
fig_left_nacc <- ggplot(nacc_left, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related left NAcc activity") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_right_nacc <- ggplot(nacc_right, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related right NAcc activity") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
ggarrange(fig_left_nacc, fig_right_nacc,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
peak_plot <- ggarrange(fig_left_nacc, fig_right_nacc,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
png("NAcc_peak.png", width = 16, height = 10, units='cm', res = 600)
peak_plot
dev.off()
fig_left_nacc <- ggplot(nacc_left, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related activity \n Left NAcc") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_left_nacc
fig_left_nacc <- ggplot(nacc_left, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related activity \n Left NAcc") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_right_nacc <- ggplot(nacc_right, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related activity \n Left NAcc") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
peak_plot <- ggarrange(fig_left_nacc, fig_right_nacc,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
png("NAcc_peak.png", width = 16, height = 10, units='cm', res = 600)
peak_plot
dev.off()
png("NAcc_peak.png", width = 18, height = 10, units='cm', res = 600)
peak_plot
dev.off()
###### define sample #####
rm(list=ls())
sample <- "n58" # n71, n53, n56, n63, n50
# install.packages('tidyverse', 'stringr')
libs<-c("tidyverse", "stringr", "plyr", "dplyr", "lme4", "robustlmm", "lmerTest",
"sjPlot", "remef", "ggpubr")
sapply(libs, require, character.only=TRUE)
cbPalette <- c( "#0072B2", "#D55E00", "#009E73", "#CC79A7",
"#F0E442", "#56B4E9", "#999999", "#E69F00")
data_path<-'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT'
if (sample == 'n71') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n71.RData"))
} else if (sample == 'n58') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n58.RData"))
} else if (sample == 'n56') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n56.RData"))
}
redcap <- redcap_new
# create outcome as predictor for stay switch analyses
behav_final$outcome_pred <- factor(behav_final$outcome)
behav_final_redcap$outcome_pred <- factor(behav_final_redcap$outcome)
# code aud criteria and audit criteria as factor
#behav_final_redcap$aud_sum <- factor(behav_final_redcap$aud_sum)
#behav_final_redcap$audit_sum <- factor(behav_final_redcap$audit_sum)
#redcap$aud_sum <- factor(redcap$aud_sum)
#redcap$audit_sum <- factor(redcap$audit_sum)
# set contrasts
contrasts(behav_final$reinforcer_type) <- abs(contr.treatment(2)-1)
contrasts(behav_final_redcap$reinforcer_type) <- abs(contr.treatment(2)-1)
redcap$aud_group <- factor(redcap$aud_group, levels = c("HC", "AUD"))
contrasts(redcap$aud_group) <- contr.treatment(2)
contrasts(behav_final_redcap$aud_group) <- contr.treatment(2)
contrasts(behav_final$outcome_pred) <- contr.treatment(2)
contrasts(behav_final_redcap$outcome_pred) <- contr.treatment(2)
# se function
se <- function(x) sd(x, na.rm=TRUE)/sqrt(length(x)-sum(is.nan(x)))
# get p correct per subject and block for linear mixed-effects regression
df_c <- behav_final %>%
group_by(ID,reinforcer_type) %>%
summarise_at(vars(correct), list(p_correct = mean), na.rm=T)
df_c_rating <- merge(df_c,behav_rating,by=c("ID","reinforcer_type")) # merge with demographic data for linear mixed-effects regression
fig_correct <- ggplot(df_c, aes(reinforcer_type, y = p_correct, fill=reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
scale_y_continuous("% Correct choices", limits = c(0,1)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_correct
###### define sample #####
rm(list=ls())
sample <- "n58" # n71, n53, n56, n63, n50
# install.packages('tidyverse', 'stringr')
libs<-c("tidyverse", "stringr", "plyr", "dplyr", "lme4", "robustlmm", "lmerTest",
"sjPlot", "remef", "ggpubr")
sapply(libs, require, character.only=TRUE)
cbPalette <- c( "#0072B2", "#D55E00", "#009E73", "#CC79A7",
"#F0E442", "#56B4E9", "#999999", "#E69F00")
data_path<-'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT'
if (sample == 'n71') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n71.RData"))
} else if (sample == 'n58') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n58.RData"))
} else if (sample == 'n56') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n56.RData"))
}
redcap <- redcap_new
# create outcome as predictor for stay switch analyses
behav_final$outcome_pred <- factor(behav_final$outcome)
behav_final_redcap$outcome_pred <- factor(behav_final_redcap$outcome)
# code aud criteria and audit criteria as factor
#behav_final_redcap$aud_sum <- factor(behav_final_redcap$aud_sum)
#behav_final_redcap$audit_sum <- factor(behav_final_redcap$audit_sum)
#redcap$aud_sum <- factor(redcap$aud_sum)
#redcap$audit_sum <- factor(redcap$audit_sum)
# set contrasts
contrasts(behav_final$reinforcer_type) <- abs(contr.treatment(2)-1)
contrasts(behav_final_redcap$reinforcer_type) <- abs(contr.treatment(2)-1)
redcap$aud_group <- factor(redcap$aud_group, levels = c("HC", "AUD"))
contrasts(redcap$aud_group) <- contr.treatment(2)
contrasts(behav_final_redcap$aud_group) <- contr.treatment(2)
contrasts(behav_final$outcome_pred) <- contr.treatment(2)
contrasts(behav_final_redcap$outcome_pred) <- contr.treatment(2)
# se function
se <- function(x) sd(x, na.rm=TRUE)/sqrt(length(x)-sum(is.nan(x)))
# get df with taste and craving ratings per subject and block
behav_rating <- behav_final %>%
group_by(ID,reinforcer_type) %>%
select(ID,reinforcer_type,ID_block,taste1, taste2, crave1, crave2) %>%
distinct() %>%
mutate(taste_diff=taste2-taste1,
crave_diff=crave2-crave1)
behav_rating <- merge(behav_rating,redcap,by="ID",all.x = T) # merge with demographic data for linear mixed-effects regression
behav_rating_alc <- behav_rating[behav_rating$reinforcer_type=='A',]
behav_rating_jui <- behav_rating[behav_rating$reinforcer_type=='J',]
behav_rating_long <- behav_rating %>%
select(ID, aud_group, reinforcer_type, taste1, taste2, crave1, crave2) %>%
pivot_longer(cols = c(taste1, taste2, crave1, crave2), names_to = "ratings")
behav_rating_long_taste <- behav_rating_long %>%
filter(ratings %in% c("taste1", "taste2"))
behav_rating_long_crave <- behav_rating_long %>%
filter(ratings %in% c("crave1", "crave2"))
behav_rating_long_taste$ratings <- factor(behav_rating_long_taste$ratings)
contrasts(behav_rating_long_taste$ratings) <- contr.treatment(2)
behav_rating_long_crave$ratings <- factor(behav_rating_long_crave$ratings)
contrasts(behav_rating_long_crave$ratings) <- contr.treatment(2)
# get p correct per subject and block for linear mixed-effects regression
df_c <- behav_final %>%
group_by(ID,reinforcer_type) %>%
summarise_at(vars(correct), list(p_correct = mean), na.rm=T)
df_c_rating <- merge(df_c,behav_rating,by=c("ID","reinforcer_type")) # merge with demographic data for linear mixed-effects regression
df_c <- merge(df_c,redcap,by="ID") # merge with demographic data for linear mixed-effects regression
# get p correct per block and trial for plotting
df_c_block_trial <- behav_final %>%
group_by(reinforcer_type,trial_block) %>%
summarise_at(vars(correct), list(p_correct = mean), na.rm=T)
# get p correct per block and aud group and trial for plotting
df_c_block_trial_group <- behav_final_redcap %>%
group_by(aud_group,reinforcer_type,trial_block) %>%
summarise_at(vars(correct), list(p_correct = mean), na.rm=T)
fig_correct <- ggplot(df_c, aes(reinforcer_type, y = p_correct, fill=reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
scale_y_continuous("% Correct choices", limits = c(0,1)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_correct
# get p correct per subject and block for linear mixed-effects regression
df_win_stay <- behav_final %>%
group_by(ID,reinforcer_type,na.rm=T) %>%
summarise_at(vars(stay,win_stay), list(p = mean), na.rm=T) %>%
na.omit()
df_win_stay <- merge(df_win_stay,redcap,by="ID") # merge with demographic data for linear mixed-effects
# get p correct per block and trial for plotting
df_win_stay_trial <- behav_final %>%
group_by(reinforcer_type,trial_block) %>%
summarise_at(vars(win_stay), list(p = mean), na.rm=T)
# get p correct per block and aud group and trial for plotting
df_win_stay_trial_group <- behav_final_redcap %>%
group_by(aud_group,reinforcer_type,trial_block) %>%
summarise_at(vars(win_stay), list(p = mean), na.rm=T)
fig_win_stay <- ggplot(df_win_stay, aes(reinforcer_type, y = win_stay_p, fill=reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1) +
facet_wrap(~ aud_group, scales="fixed") +
scale_y_continuous("Win-stay probability", limits = c(0,1)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_win_stay
fig_win_stay <- ggplot(df_win_stay, aes(reinforcer_type, y = win_stay_p, fill=reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1, size=0.8) +
facet_wrap(~ aud_group, scales="fixed") +
scale_y_continuous("Win-stay probability", limits = c(0,1)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_win_stay
# save combined plot
fig_correct_win_stay <- ggarrange(fig_correct, fig_win_stay,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
fig_correct_win_stay
png("correct_win_stay.png", width = 16, height = 10, units='cm', res = 600)
fig_correct_win_stay
dev.off()
rm(list=ls())
libs<-c("rstan", "gdata", "bayesplot", "stringr", "dplyr", "ggplot2", "loo", "hBayesDM", "lme4", "sjPlot", "ggpubr", "tidyr")
sapply(libs, require, character.only=TRUE)
#datapath <- '/fast/work/groups/ag_schlagenhauf/B01_FP1_WP2/ILT_Stan_Modeling'
datapath <- 'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT/WP2_ILT_CODE/02_Behav_and_Comp_Modeling'
#out_path <- '/fast/work/groups/ag_schlagenhauf/B01_FP1_WP2/ILT_Stan_Modeling/Output'
out_path <- 'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT/WP2_ILT_DATA/Stan_Output/PH_withC_hierarchical_group'
#fit_file <- 'fit_n_71_2024-01-02_bandit2arm_delta_PH_withC_hierarchical_estimation1_delta0.9_stepsize0.5.rds'
#fit <- readRDS(file.path(out_path, fit_file)) # Stan model output
params <- read.table(file.path(out_path, 'Params_PH_withC_red_hierarchical_nortype_n58.txt'), header = T)
# set contrasts
#params$reinforcer_type <- as.factor(params$reinforcer_type)
#params$aud_group <- as.factor(params$aud_group)
#contrasts(params$reinforcer_type) <- contr.treatment(2)
#contrasts(params$aud_group) <- contr.treatment(2)
# prepare data
params <- params %>%
select(!ID_block) %>%
mutate(ID = as.factor(ID),
aud_group = as.factor(aud_group),
reinforcer_type = as.factor(reinforcer_type),
block = as.factor(block))
fig1 <- ggplot(params, aes(x = reinforcer_type, y = alpha, fill = reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
scale_y_continuous("Initial learning rate (α)", limits = c(0,1)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig1
fig2 <- ggplot(params, aes(x = reinforcer_type, y = tau, fill = reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
scale_y_continuous("Inverse temperature (β)", limits = c(0,100)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig2
fig3 <- ggplot(params, aes(x = reinforcer_type, y = gamma, fill = reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
scale_y_continuous("Decay constant (γ)", limits = c(0,1)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig3
fig4 <- ggplot(params, aes(x = reinforcer_type, y = C, fill = reinforcer_type)) +
geom_violin() +
geom_boxplot(width=0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
scale_y_continuous("Scaling coefficient (C)", limits = c(0,1)) +
theme_light(base_size=18) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig4
# save combined plot
fig_params <- ggarrange(fig1, fig2, fig3, fig4,
labels = c("A", "B", "C", "D"),
ncol = 4, nrow = 1,
common.legend = TRUE, legend="bottom")
fig_params
png("params.png", width = 32, height = 10, units='cm', res = 600)
fig_params
dev.off()
###### Preps ######
# clear
rm(list=ls())
#install.packages('tidyverse', 'plyr')
libs<-c("tidyverse", "R.matlab", "stringr", "dplyr", "ggplot2", "ggpubr")
sapply(libs, require, character.only=TRUE)
# define paths
second_level_path <- 'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT/WP2_ILT_DATA/fMRI'
nacc <- read.csv(file.path(second_level_path, "peak_values", "nacc_per_reinforcer_type.txt", na.strings=""))
# plot
nacc <- nacc %>%
mutate(ID = c(1:56),
aud_group = as.factor(c(rep("HC",28), rep("AUD",28)))) %>%
pivot_longer(!c("ID", "aud_group"), names_to = "combination", values_to = "value") %>%
mutate(combination = as.factor(combination),
reinforcer = case_when(combination %in% c("alc_left", "alc_right") ~ "alcohol",
combination %in% c("jui_left", "jui_right") ~ "juice"),
region = case_when(combination %in% c("alc_left", "jui_left") ~ "left_Nacc",
combination %in% c("jui_right", "alc_right") ~ "right_Nacc"))
nacc_left <- nacc %>%
filter(region == "left_Nacc")
nacc_right <- nacc %>%
filter(region == "right_Nacc")
fig_left_nacc <- ggplot(nacc_left, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related activity \n Left NAcc") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
fig_right_nacc <- ggplot(nacc_right, aes(x=reinforcer, y=value, fill=reinforcer)) +
geom_violin() +
geom_boxplot(width = 0.1, size=0.8) +
facet_wrap(~aud_group, scales="fixed") +
xlab("group") +
ylab("Mean RPE-related activity \n Left NAcc") +
ylim(-0.1, 0.08) +
theme_light(base_size = 18) +
theme(legend.position = "right") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "bottom") +
scale_fill_brewer(name="Reinforcer type",
labels=c("alcohol", "juice"),
palette = "Accent")
peak_plot <- ggarrange(fig_left_nacc, fig_right_nacc,
labels = c("B", "C"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
png("NAcc_peak.png", width = 18, height = 10, units='cm', res = 600)
peak_plot
dev.off()
