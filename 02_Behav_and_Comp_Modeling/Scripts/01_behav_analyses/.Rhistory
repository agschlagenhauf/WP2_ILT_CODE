###### define sample #####
rm(list=ls())
sample <- "n58" # n71, n53, n56, n63, n50
# install.packages('tidyverse', 'stringr')
libs<-c("tidyverse", "stringr", "plyr", "dplyr", "lme4", "robustlmm", "lmerTest",
"sjPlot", "remef")
sapply(libs, require, character.only=TRUE)
cbPalette <- c( "#0072B2", "#D55E00", "#009E73", "#CC79A7",
"#F0E442", "#56B4E9", "#999999", "#E69F00")
data_path<-'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT'
if (sample == 'n71') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n71.RData"))
} else if (sample == 'n63') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n63.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n63.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n63.RData"))
} else if (sample == 'n60') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n60.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n60.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n60.RData"))
} else if (sample == 'n58') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n58.RData"))
} else if (sample == 'n56') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n56.RData"))
} else if (sample == 'n53') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n53.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n53.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n53.RData"))
} else if (sample == 'n50') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n50.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n50.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n50.RData"))
}
# create outcome as predictor for stay switch analyses
behav_final$outcome_pred <- factor(behav_final$outcome)
behav_final_redcap$outcome_pred <- factor(behav_final_redcap$outcome)
# code aud criteria and audit criteria as factor
#behav_final_redcap$aud_sum <- factor(behav_final_redcap$aud_sum)
#behav_final_redcap$audit_sum <- factor(behav_final_redcap$audit_sum)
#redcap$aud_sum <- factor(redcap$aud_sum)
#redcap$audit_sum <- factor(redcap$audit_sum)
# set contrasts
contrasts(behav_final$reinforcer_type) <- abs(contr.treatment(2)-1)
contrasts(behav_final_redcap$reinforcer_type) <- abs(contr.treatment(2)-1)
redcap$aud_group <- factor(redcap$aud_group, levels = c("HC", "AUD"))
View(redcap_new)
###### define sample #####
rm(list=ls())
sample <- "n71" # n71, n53, n56, n63, n50
# install.packages('tidyverse', 'stringr')
libs<-c("tidyverse", "stringr", "plyr", "dplyr", "lme4", "robustlmm", "lmerTest",
"sjPlot", "remef")
sapply(libs, require, character.only=TRUE)
cbPalette <- c( "#0072B2", "#D55E00", "#009E73", "#CC79A7",
"#F0E442", "#56B4E9", "#999999", "#E69F00")
data_path<-'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT'
if (sample == 'n71') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n71.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n71.RData"))
} else if (sample == 'n63') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n63.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n63.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n63.RData"))
} else if (sample == 'n60') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n60.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n60.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n60.RData"))
} else if (sample == 'n58') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n58.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n58.RData"))
} else if (sample == 'n56') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n56.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n56.RData"))
} else if (sample == 'n53') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n53.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n53.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n53.RData"))
} else if (sample == 'n50') {
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_n50.RData"))
load(file.path(data_path,"WP2_ILT_DATA/RedCap/redcap_n50.RData"))
load(file.path(data_path,"WP2_ILT_DATA/Behav/behav_final_redcap_n50.RData"))
}
# create outcome as predictor for stay switch analyses
behav_final$outcome_pred <- factor(behav_final$outcome)
behav_final_redcap$outcome_pred <- factor(behav_final_redcap$outcome)
# code aud criteria and audit criteria as factor
#behav_final_redcap$aud_sum <- factor(behav_final_redcap$aud_sum)
#behav_final_redcap$audit_sum <- factor(behav_final_redcap$audit_sum)
#redcap$aud_sum <- factor(redcap$aud_sum)
#redcap$audit_sum <- factor(redcap$audit_sum)
# set contrasts
contrasts(behav_final$reinforcer_type) <- abs(contr.treatment(2)-1)
contrasts(behav_final_redcap$reinforcer_type) <- abs(contr.treatment(2)-1)
redcap$aud_group <- factor(redcap$aud_group, levels = c("HC", "AUD"))
contrasts(redcap$aud_group) <- contr.treatment(2)
contrasts(behav_final_redcap$aud_group) <- contr.treatment(2)
contrasts(behav_final$outcome_pred) <- contr.treatment(2)
contrasts(behav_final_redcap$outcome_pred) <- contr.treatment(2)
# se function
se <- function(x) sd(x, na.rm=TRUE)/sqrt(length(x)-sum(is.nan(x)))
# get df with taste and craving ratings per subject and block
behav_rating <- behav_final %>%
group_by(ID,reinforcer_type) %>%
select(ID,reinforcer_type,ID_block,taste1, taste2, crave1, crave2) %>%
distinct() %>%
mutate(taste_diff=taste2-taste1,
crave_diff=crave2-crave1)
behav_rating <- merge(behav_rating,redcap,by="ID",all.x = T) # merge with demographic data for linear mixed-effects regression
behav_rating_alc <- behav_rating[behav_rating$reinforcer_type=='A',]
behav_rating_jui <- behav_rating[behav_rating$reinforcer_type=='J',]
# get p correct per ID and block and trial
df_c_ID_block_trialbin <- behav_final_redcap %>%
mutate(trial_bin = ntile(trial_block, n=5)) %>%
group_by(ID,reinforcer_type,trial_bin) %>%
summarise_at(vars(correct), list(p_correct = mean), na.rm=T) %>%
mutate(trial_bin = as.factor(trial_bin))
df_c_ID_block_trialbin_wide <- pivot_wider(df_c_ID_block_trialbin, id_cols="ID", names_from = c(reinforcer_type, trial_bin), values_from = c(p_correct))
df_c_ID_block_trialbin_excl <- df_c_ID_block_trialbin[df_c_ID_block_trialbin$trial_bin==5&df_c_ID_block_trialbin$p_correct<=0.6,] # less than 50% correct in last 5 trials
ID_excl_c <- c(unique(df_c_ID_block_trialbin_excl$ID))
length(ID_excl_c)
ID_excl_c
# get p correct per ID and block and trial
df_c_ID_block_trialbin <- behav_final_redcap %>%
mutate(trial_bin = ntile(trial_block, n=5)) %>%
group_by(ID,reinforcer_type,trial_bin) %>%
summarise_at(vars(correct), list(p_correct = mean), na.rm=T) %>%
mutate(trial_bin = as.factor(trial_bin))
df_c_ID_block_trialbin_wide <- pivot_wider(df_c_ID_block_trialbin, id_cols="ID", names_from = c(reinforcer_type, trial_bin), values_from = c(p_correct))
df_c_ID_block_trialbin_excl <- df_c_ID_block_trialbin[df_c_ID_block_trialbin$trial_bin==5&df_c_ID_block_trialbin$p_correct<0.6,] # less than 50% correct in last 5 trials
ID_excl_c <- c(unique(df_c_ID_block_trialbin_excl$ID))
length(ID_excl_c)
ID_excl_c
# get p correct per ID and block and trial
df_c_ID_block_trialbin <- behav_final_redcap %>%
mutate(trial_bin = ntile(trial_block, n=5)) %>%
group_by(ID,reinforcer_type,trial_bin) %>%
summarise_at(vars(correct), list(p_correct = mean), na.rm=T) %>%
mutate(trial_bin = as.factor(trial_bin))
df_c_ID_block_trialbin_wide <- pivot_wider(df_c_ID_block_trialbin, id_cols="ID", names_from = c(reinforcer_type, trial_bin), values_from = c(p_correct))
df_c_ID_block_trialbin_excl <- df_c_ID_block_trialbin[df_c_ID_block_trialbin$trial_bin==5&df_c_ID_block_trialbin$p_correct<=0.6,] # less than 50% correct in last 5 trials
ID_excl_c <- c(unique(df_c_ID_block_trialbin_excl$ID))
length(ID_excl_c)
ID_excl_c
