---
title: "Analysis of computational modeling results"
author: "Milena Musial"
output: html_document
date: '2023-12-18'
format: 
  html:
    embed-resources: true
    toc: true
    toc-depth: 3
    code-fold: true
    number-sections: true
    fig-width: 8
    fig-height: 6
    fig-format: svg
    editor_options: 
    chunk_output_type: console
---

# Setup

```{r}
rm(list=ls())
libs<-c("rstan", "gdata", "bayesplot", "stringr", "dplyr", "ggplot2", "loo", "hBayesDM", "lme4", "sjPlot", "ggpubr", "tidyr")
sapply(libs, require, character.only=TRUE)

#datapath <- '/fast/work/groups/ag_schlagenhauf/B01_FP1_WP2/ILT_Stan_Modeling'
datapath <- 'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT/WP2_ILT_CODE/Stan Modeling'
#out_path <- '/fast/work/groups/ag_schlagenhauf/B01_FP1_WP2/ILT_Stan_Modeling/Output'
out_path <- 'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT/WP2_ILT_CODE/Stan Modeling/Output'

#fit_file <- 'fit_n_71_2024-01-02_bandit2arm_delta_PH_withC_hierarchical_estimation1_delta0.9_stepsize0.5.rds'

#fit <- readRDS(file.path(out_path, fit_file)) # Stan model output

params_PH_withC <- read.table(file.path(out_path, 'Params_PH_withC_n56.txt'), header = T)
params_PH_withC_aud <- read.table(file.path(out_path, 'Params_PH_withC_n56_aud.txt'), header = T)
params_PH_withC_hc <- read.table(file.path(out_path, 'Params_PH_withC_n56_hc.txt'), header = T)
params_PH_withC_aud_alc <- read.table(file.path(out_path, 'Params_PH_withC_n56_aud_alc.txt'), header = T)
params_PH_withC_aud_jui <- read.table(file.path(out_path, 'Params_PH_withC_n56_aud_jui.txt'), header = T)
params_PH_withC_hc_alc <- read.table(file.path(out_path, 'Params_PH_withC_n56_hc_alc.txt'), header = T)
params_PH_withC_hc_jui <- read.table(file.path(out_path, 'Params_PH_withC_n56_hc_jui.txt'), header = T)
#params_PH_withC_red_hie <- read.table(file.path(out_path, 'Params_PH_withC_red_hierarchical_n60.txt'), header = T)
#params_PH_withC_red_hie_concat_hc <- read.table(file.path(out_path, 'Params_PH_withC_red_hierarchical_concat_n60_hc.txt'), header = T)
#params_PH_withC_red_hie_concat_aud <- read.table(file.path(out_path, 'Params_PH_withC_red_hierarchical_concat_n60_aud.txt'), header = T)

#params <- params_PH_withC_red_hie

# set contrasts
#params$reinforcer_type <- as.factor(params$reinforcer_type)
#params$aud_group <- as.factor(params$aud_group)

#contrasts(params$reinforcer_type) <- contr.treatment(2)
#contrasts(params$aud_group) <- contr.treatment(2)


cbPalette <- c( "#0072B2", "#D55E00", "#009E73", "#CC79A7",
                "#F0E442", "#56B4E9", "#999999", "#E69F00")

```

```{r}
# Prepare data from concat models

params_PH_withC_red_hie_concat_hc_jui <- params_PH_withC_red_hie_concat_hc %>%
  select(ID_block, alpha_jui, tau_jui, gamma_jui, C_jui) %>%
  rename(ID = ID_block,
         alpha = alpha_jui,
         tau = tau_jui,
         gamma = gamma_jui,
         C = C_jui) %>%
  mutate(reinforcer_type = "J")

params_PH_withC_red_hie_concat_hc_alc <- params_PH_withC_red_hie_concat_hc %>%
  select(ID_block, alpha_alc, tau_alc, gamma_alc, C_alc) %>%
  rename(ID = ID_block,
         alpha = alpha_alc,
         tau = tau_alc,
         gamma = gamma_alc,
         C = C_alc) %>%
  mutate(reinforcer_type = "A")

params_PH_withC_red_hie_concat_hc_juialc <- rbind(params_PH_withC_red_hie_concat_hc_jui,params_PH_withC_red_hie_concat_hc_alc)
tmp <- params_PH_withC %>%
  select(ID, reinforcer_type, aud_group, block)
params_PH_withC_red_hie_concat_hc_final <- merge(tmp, params_PH_withC_red_hie_concat_hc_juialc, by=c("ID","reinforcer_type"))

params_PH_withC_red_hie_concat_aud_jui <- params_PH_withC_red_hie_concat_aud %>%
  select(ID_block, alpha_jui, tau_jui, gamma_jui, C_jui) %>%
  rename(ID = ID_block,
         alpha = alpha_jui,
         tau = tau_jui,
         gamma = gamma_jui,
         C = C_jui) %>%
  mutate(reinforcer_type = "J")

params_PH_withC_red_hie_concat_aud_alc <- params_PH_withC_red_hie_concat_aud %>%
  select(ID_block, alpha_alc, tau_alc, gamma_alc, C_alc) %>%
  rename(ID = ID_block,
         alpha = alpha_alc,
         tau = tau_alc,
         gamma = gamma_alc,
         C = C_alc) %>%
  mutate(reinforcer_type = "A")

params_PH_withC_red_hie_concat_aud_juialc <- rbind(params_PH_withC_red_hie_concat_aud_jui,params_PH_withC_red_hie_concat_aud_alc)
params_PH_withC_red_hie_concat_aud_final <- merge(tmp, params_PH_withC_red_hie_concat_aud_juialc, by=c("ID","reinforcer_type"))

params_PH_withC_red_hie_concat <- rbind(params_PH_withC_red_hie_concat_hc_final,params_PH_withC_red_hie_concat_aud_final)
```

```{r}
# prepare data from separately fitted non-hierarchical models
params_PH_withC_aud_hc <- rbind(params_PH_withC_aud,params_PH_withC_hc)

params_PH_withC_aud_hc_alc_jui <- rbind(params_PH_withC_aud_alc,params_PH_withC_aud_jui,params_PH_withC_hc_alc,params_PH_withC_hc_jui)
```

# Bayesian model comparison

## Preps

```{r}
# load log likelihood per model
log_lik_main <- read.table(file.path(outpath, 'log_lik_main_hierarchical.txt'), header = F)
r_eff_main <- relative_eff(exp(log_lik_main))
log_lik_PH_withC <- read.table(file.path(outpath, 'log_lik_PH_withC_hierarchical.txt'), header = F)
r_eff_PH_withC <- relative_eff(exp(log_lik_PH_withC))
```

## Fit per model

```{r}
loo_main <- loo(log_lik_main, r_eff=r_eff_main)
print(loo_main)
plot(loo_main)

loo_PH_withC <- loo(log_lik_PH_withC, r_eff=r_eff_PH_withC)
print(loo_PH_withC)
plot(loo_PH_withC)
```

## Compare model fit

```{r}
comp <- loo_compare(loo_main, loo_PH_withC)
print(comp)
```

# Bayesian parameter analysis

```{r}
posterior_draws <- extract(fit, pars = c("A_sub_m", "tau_sub_m", "gamma_sub_m", "C_sub_m", "A_sub_con_m", "tau_sub_con_m", "gamma_sub_con_m", "C_sub_con_m"))

HDIofMCMC(posterior_draws$A_sub_m)
HDIofMCMC(posterior_draws$tau_sub_m)
HDIofMCMC(posterior_draws$gamma_sub_m)
HDIofMCMC(posterior_draws$C_sub_m)
HDIofMCMC(posterior_draws$A_sub_con_m)
HDIofMCMC(posterior_draws$tau_sub_con_m)
HDIofMCMC(posterior_draws$gamma_sub_con_m)
HDIofMCMC(posterior_draws$C_sub_con_m)

plotHDI(posterior_draws$A_sub_m)
plotHDI(posterior_draws$tau_sub_m)
plotHDI(posterior_draws$gamma_sub_m)
plotHDI(posterior_draws$C_sub_m)
plotHDI(posterior_draws$A_sub_con_m)
plotHDI(posterior_draws$tau_sub_con_m)
plotHDI(posterior_draws$gamma_sub_con_m)
plotHDI(posterior_draws$C_sub_con_m)
```

# Plotting

## Alpha

<!-- ### From one model -->

<!-- ```{r} -->
<!-- fig1 <- ggplot(params, aes(reinforcer_type, y = alpha, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) + -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="free_y") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("alpha") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") -->

<!-- fig1 -->
<!-- ``` -->

### From several models

```{r}
fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = alpha, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("alpha") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC_all")

fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = alpha, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("alpha") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none")  +
  ggtitle("PH_withC_pergroup")

fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = alpha, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("alpha") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC_pergroupandreinforcertype")

fig_comb <- ggarrange(fig1, fig2, fig3)
fig_comb
```

## Inverse temperature

<!-- ### From one model -->

<!-- ```{r} -->
<!-- fig2 <- ggplot(params, aes(reinforcer_type, y = invtemp, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="free_y") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("beta") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") -->

<!-- fig2 -->
<!-- ``` -->

### From several models

```{r}
fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = tau, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("tau") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC")

fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = tau, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("tau") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none")  +
  ggtitle("PH_withC_pergroup")

fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = tau, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("tau") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC_pergroupandreinforcertype")

fig_comb <- ggarrange(fig1, fig2, fig3)
fig_comb
```

## Gamma

<!-- ### From one model -->

<!-- ```{r} -->
<!-- fig3 <- ggplot(params, aes(reinforcer_type, y = gamma, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="free_y") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("gamma") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") -->

<!-- fig3 -->
<!-- ``` -->

### From several models

```{r}
fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = gamma, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("gamma") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC")

fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = gamma, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("gamma") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none")  +
  ggtitle("PH_withC_pergroup")

fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = gamma, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("gamma") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC_pergroupandreinforcertype")

fig_comb <- ggarrange(fig1, fig2, fig3)
fig_comb
```

## C

<!-- ### From one model -->

<!-- ```{r} -->
<!-- fig4 <- ggplot(params, aes(reinforcer_type, y = C, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="free_y") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("C") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") -->

<!-- fig4 -->
<!-- ``` -->

### From several models

```{r}
fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = C, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("C") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC")

fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = C, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("C") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none")  +
  ggtitle("PH_withC_pergroup")

fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = C, fill=reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1) + 
  geom_jitter(shape=16, position=position_jitter(0.2)) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) +
  scale_y_continuous("C") +
  scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) +
  theme_bw(base_size=12) +
  theme(legend.position = "none") +
  ggtitle("PH_withC_pergroupandreinforcertype")

fig_comb <- ggarrange(fig1, fig2, fig3)
fig_comb
```
# Frequentist Linear mixed-effects regression

## Alpha

```{r}
m_alpha <- lmer(alpha ~ 1 + reinforcer_type*aud_group + (1 + reinforcer_type | ID), data=params, control=lmerControl(calc.derivs=FALSE), REML=F)

tab_model(m_alpha,
          dv.labels=c("m_correct"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

## Inverse temperature

```{r}
m_invtemp <- lmer(invtemp ~ 1 + reinforcer_type*aud_group + (1 | ID), data=params, control=lmerControl(calc.derivs=FALSE), REML=F)

tab_model(m_invtemp,
          dv.labels=c("m_invtemp"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

## Gamma

```{r}
m_gamma <- lmer(gamma ~ 1 + reinforcer_type*aud_group + (1 | ID), data=params, control=lmerControl(calc.derivs=FALSE), REML=F)

tab_model(m_gamma,
          dv.labels=c("m_gamma"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

## Gamma

```{r}
m_C <- lmer(C_const ~ 1 + reinforcer_type*aud_group + (1 | ID), data=params,
            control=lmerControl(calc.derivs=FALSE), REML=F)

tab_model(m_C,
          dv.labels=c("m_C"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

