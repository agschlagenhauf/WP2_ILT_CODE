---
title: "Analysis of computational modeling results"
author: "Milena Musial"
output: html_document
date: '2023-12-18'
format: 
  html:
    embed-resources: true
    toc: true
    toc-depth: 3
    code-fold: true
    number-sections: true
    fig-width: 8
    fig-height: 6
    fig-format: svg
    editor_options: 
    chunk_output_type: console
---

# Setup

```{r}
rm(list=ls())
libs<-c("rstan", "gdata", "bayesplot", "stringr", "dplyr", "ggplot2", "loo", "hBayesDM", "lme4", "sjPlot", "ggpubr", "tidyr")
sapply(libs, require, character.only=TRUE)

#datapath <- '/fast/work/groups/ag_schlagenhauf/B01_FP1_WP2/ILT_Stan_Modeling'
datapath <- 'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT/WP2_ILT_CODE/02_Behav_and_Comp_Modeling'
#out_path <- '/fast/work/groups/ag_schlagenhauf/B01_FP1_WP2/ILT_Stan_Modeling/Output'
out_path <- 'C:/Users/musialm/OneDrive - Charité - Universitätsmedizin Berlin/PhD/04_B01/ILT/WP2_ILT_DATA/Stan_Output/PH_withC_hierarchical_group'

#fit_file <- 'fit_n_71_2024-01-02_bandit2arm_delta_PH_withC_hierarchical_estimation1_delta0.9_stepsize0.5.rds'

#fit <- readRDS(file.path(out_path, fit_file)) # Stan model output

params <- read.table(file.path(out_path, 'Params_PH_withC_red_hierarchical_nortype_n58.txt'), header = T)

# set contrasts
#params$reinforcer_type <- as.factor(params$reinforcer_type)
#params$aud_group <- as.factor(params$aud_group)

#contrasts(params$reinforcer_type) <- contr.treatment(2)
#contrasts(params$aud_group) <- contr.treatment(2)

```

```{r}
# prepare data
params <- params %>%
  select(!ID_block) %>%
  mutate(ID = as.factor(ID),
         aud_group = as.factor(aud_group),
         reinforcer_type = as.factor(reinforcer_type),
         block = as.factor(block))
```

# Bayesian parameter analysis

```{r}
posterior_draws <- extract(fit, pars = c("A_sub_m", "tau_sub_m", "gamma_sub_m", "C_sub_m", "A_sub_con_m", "tau_sub_con_m", "gamma_sub_con_m", "C_sub_con_m"))

HDIofMCMC(posterior_draws$A_sub_m)
HDIofMCMC(posterior_draws$tau_sub_m)
HDIofMCMC(posterior_draws$gamma_sub_m)
HDIofMCMC(posterior_draws$C_sub_m)
HDIofMCMC(posterior_draws$A_sub_con_m)
HDIofMCMC(posterior_draws$tau_sub_con_m)
HDIofMCMC(posterior_draws$gamma_sub_con_m)
HDIofMCMC(posterior_draws$C_sub_con_m)

plotHDI(posterior_draws$A_sub_m)
plotHDI(posterior_draws$tau_sub_m)
plotHDI(posterior_draws$gamma_sub_m)
plotHDI(posterior_draws$C_sub_m)
plotHDI(posterior_draws$A_sub_con_m)
plotHDI(posterior_draws$tau_sub_con_m)
plotHDI(posterior_draws$gamma_sub_con_m)
plotHDI(posterior_draws$C_sub_con_m)
```

# Plotting

## Alpha

### From one model

```{r}
fig1 <- ggplot(params, aes(x = reinforcer_type, y = alpha, fill = reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1, size=0.8) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_y_continuous("Initial learning rate (α)", limits = c(0,1)) +
  theme_light(base_size=18) +
  theme(axis.title.x=element_blank(),
      axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      legend.position = "bottom") +
  scale_fill_brewer(name="Reinforcer type", 
                  labels=c("alcohol", "juice"),
                  palette = "Accent")

fig1
```

<!-- ### From several models -->

<!-- ```{r} -->
<!-- fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = alpha, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("alpha") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC_all") -->

<!-- fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = alpha, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("alpha") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none")  + -->
<!--   ggtitle("PH_withC_pergroup") -->

<!-- fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = alpha, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("alpha") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC_pergroupandreinforcertype") -->

<!-- fig_comb <- ggarrange(fig1, fig2, fig3) -->
<!-- fig_comb -->
<!-- ``` -->

## Inverse temperature

### From one model

```{r}
fig2 <- ggplot(params, aes(x = reinforcer_type, y = tau, fill = reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1, size=0.8) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_y_continuous("Inverse temperature (β)", limits = c(0,100)) +
  theme_light(base_size=18) +
  theme(axis.title.x=element_blank(),
      axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      legend.position = "bottom") +
  scale_fill_brewer(name="Reinforcer type", 
                  labels=c("alcohol", "juice"),
                  palette = "Accent")

fig2
```
<!-- ### From several models -->

<!-- ```{r} -->
<!-- fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = tau, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("tau") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC") -->

<!-- fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = tau, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("tau") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none")  + -->
<!--   ggtitle("PH_withC_pergroup") -->

<!-- fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = tau, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("tau") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC_pergroupandreinforcertype") -->

<!-- fig_comb <- ggarrange(fig1, fig2, fig3) -->
<!-- fig_comb -->
<!-- ``` -->

## Gamma

### From one model

```{r}
fig3 <- ggplot(params, aes(x = reinforcer_type, y = gamma, fill = reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1, size=0.8) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_y_continuous("Decay constant (γ)", limits = c(0,1)) +
  theme_light(base_size=18) +
  theme(axis.title.x=element_blank(),
      axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      legend.position = "bottom") +
  scale_fill_brewer(name="Reinforcer type", 
                  labels=c("alcohol", "juice"),
                  palette = "Accent")

fig3
```

<!-- ### From several models -->

<!-- ```{r} -->
<!-- fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = gamma, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("gamma") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC") -->

<!-- fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = gamma, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("gamma") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none")  + -->
<!--   ggtitle("PH_withC_pergroup") -->

<!-- fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = gamma, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("gamma") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC_pergroupandreinforcertype") -->

<!-- fig_comb <- ggarrange(fig1, fig2, fig3) -->
<!-- fig_comb -->
<!-- ``` -->

## C

### From one model

```{r}
fig4 <- ggplot(params, aes(x = reinforcer_type, y = C, fill = reinforcer_type)) +
  geom_violin() +
  geom_boxplot(width=0.1, size=0.8) +
  facet_wrap(~aud_group, scales="fixed") +
  scale_y_continuous("Scaling coefficient (C)", limits = c(0,1)) +
  theme_light(base_size=18) +
  theme(axis.title.x=element_blank(),
      axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      legend.position = "bottom") +
  scale_fill_brewer(name="Reinforcer type", 
                  labels=c("alcohol", "juice"),
                  palette = "Accent")

fig4
```
<!-- ### From several models -->

<!-- ```{r} -->
<!-- fig1 <- ggplot(data=params_PH_withC, aes(x=reinforcer_type, y = C, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("C") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC") -->

<!-- fig2 <- ggplot(data=params_PH_withC_aud_hc, aes(x=reinforcer_type, y = C, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("C") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none")  + -->
<!--   ggtitle("PH_withC_pergroup") -->

<!-- fig3 <- ggplot(data=params_PH_withC_aud_hc_alc_jui, aes(x=reinforcer_type, y = C, fill=reinforcer_type)) + -->
<!--   geom_violin() + -->
<!--   geom_boxplot(width=0.1) +  -->
<!--   geom_jitter(shape=16, position=position_jitter(0.2)) + -->
<!--   facet_wrap(~aud_group, scales="fixed") + -->
<!--   scale_x_discrete("Reinforcer type", labels=c('alcohol', 'juice')) + -->
<!--   scale_y_continuous("C") + -->
<!--   scale_fill_manual("Reinforcer type", values = cbPalette[c(6,8)]) + -->
<!--   theme_bw(base_size=12) + -->
<!--   theme(legend.position = "none") + -->
<!--   ggtitle("PH_withC_pergroupandreinforcertype") -->

<!-- fig_comb <- ggarrange(fig1, fig2, fig3) -->
<!-- fig_comb -->
<!-- ``` -->

## Combined plot

```{r}
# save combined plot
fig_params <- ggarrange(fig1, fig2, fig3, fig4,
          labels = c("A", "B", "C", "D"),
          ncol = 4, nrow = 1,
          common.legend = TRUE, legend="bottom")
fig_params

png("params.png", width = 32, height = 10, units='cm', res = 600)
fig_params
dev.off()
```
# Frequentist Linear mixed-effects regression

## Alpha

```{r}
m_alpha <- lm(alpha ~ 1 + reinforcer_type*aud_group, data=params)

tab_model(m_alpha,
          dv.labels=c("m_correct"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

## Inverse temperature

```{r}
m_invtemp <- lm(tau ~ 1 + reinforcer_type*aud_group, data=params)

tab_model(m_invtemp,
          dv.labels=c("m_invtemp"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

## Gamma

```{r}
m_gamma <- lm(gamma ~ 1 + reinforcer_type*aud_group, data=params)

tab_model(m_gamma,
          dv.labels=c("m_gamma"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

## Gamma

```{r}
m_C <- lm(C ~ 1 + reinforcer_type*aud_group, data=params)

tab_model(m_C,
          dv.labels=c("m_C"), digits=3, digits.re=2,
          show.se=TRUE, show.stat=TRUE, show.df=TRUE, show.ci=FALSE,CSS = css_theme("cells"))
```

We cannot include reinforcer type as random effect as the model would be unidentifiable. Therefore, the model only includes a random intercept.

